<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>523</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}
    -- 从剪贴板获取内容
    set clipboardContent to the clipboard
    -- 提取问题部分
    set {questionText, choicesText} to my extractQuestionAndChoices(clipboardContent)
    -- 转义特殊字符并去除首尾的空白字符
    set escapedQuestion to escapeText(questionText)
    set trimmedEscapedQuestion to trimText(escapedQuestion)
    
    -- 尝试从本地 CSV 文件中查找问题的答案
    set awkScript to "awk -F',' -v q=\"" &amp; trimmedEscapedQuestion &amp; "\" 'BEGIN{IGNORECASE=1} $1 ~ q {found=1; print $2; exit} END{if (!found) print \"Not Found\"}' \"/path/to/your/local_answers.csv\""
    set awkOutput to do shell script awkScript
    
    if awkOutput is "Not Found" then
        -- 如果本地未找到答案，则调用 Python 脚本
        set pythonScriptPath to "/path/to/openai_query.py"
        set awkOutput to do shell script "python3 " &amp; quoted form of pythonScriptPath &amp; " " &amp; quoted form of clipboardContent
    end if
    
    set the clipboard to awkOutput

    -- 在 Chrome 中搜索答案
    tell application "System Events" to tell process "Google Chrome"
        set frontmost to true
        keystroke "f" using {command down}
        delay 0.5 -- 等待查找栏打开
        keystroke "v" using {command down}
    end tell

    return input
end run

on extractQuestionAndChoices(text)
    -- 假设问题在"Group of answer choices"之前
    set AppleScript's text item delimiters to "Group of answer choices"
    set textItems to text items of text
    set questionText to first item of textItems
    set choicesText to second item of textItems
    return {questionText, choicesText}
end extractQuestionAndChoices

on trimText(textToTrim)
    set theTrimmedText to do shell script "echo " &amp; quoted form of textToTrim &amp; " | sed 's/^[[:space:]]*//;s/[[:space:]]*$//'"
    return theTrimmedText
end trimText

on escapeText(textToEscape)
    set AppleScript's text item delimiters to {"\\"}
    set escapedText to text items of textToEscape
    set AppleScript's text item delimiters to {"\\\\"}
    set escapedText to escapedText as string
    set AppleScript's text item delimiters to {"\""}
    set escapedText to text items of escapedText
    set AppleScript's text item delimiters to {"\\\""}
    set escapedText to escapedText as string
    set AppleScript's text item delimiters to {""} -- Reset delimiters to default
    return escapedText
end escapeText
</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>4022EC07-1385-477C-9B99-8E555ED7807B</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>76B493EC-5EA6-4A41-B419-E3D804163588</string>
				<key>UUID</key>
				<string>FAAFA7AF-D09D-4EA7-A1FB-9C1E7B89750D</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>755.500000:606.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleIDsByPath</key>
		<dict/>
		<key>applicationPaths</key>
		<array/>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>11</integer>
		<key>processesInput</key>
		<false/>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<false/>
		<key>systemImageName</key>
		<string>NSActionTemplate</string>
		<key>useAutomaticInputType</key>
		<false/>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
